{
  "openapi": "3.0.0",
  "info": {
    "title": "API Documentation Flywithme",
    "version": "1.0.0"
  },
  "tags": [
    {
      "name": "Users",
      "description": "Users API Collection"
    },
    {
      "name": "Admins",
      "description": "Admins API Collection"
    },
    {
      "name": "AirPorts",
      "description": "AirPorts API Collection"
    },
    {
      "name": "Destinations",
      "description": "Destinations API Collection"
    },
    {
      "name": "Flights",
      "description": "Flights API Collection"
    },
   {
      "name": "Passengers",
      "description": "Passengers API Collection"
    },
     {
      "name": "Bookings",
      "description": "Bookings API Collection"
    },
     {
      "name": "Seats",
      "description": "Seats API Collection"
    },
      {
      "name": "History",
      "description": "History API Collection"
    },
     {
      "name": "Notification",
      "description": "Notification API Collection"
    },
    {
      "name": "WhislistDestinations",
      "description": "WhislistDestinations API Collection"
    }
     ],
  "paths": {
    "/api/register": {
      "post": {
        "tags": ["Users"],
        "requestBody": {
          "description": "Register new user",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email",
                    "example": "zidanset@mail.com"
                  },
                  "password": {
                    "type": "string",
                    "format": "password",
                    "example": "balasewu"
                  },
                  "firstName": {
                    "type": "string",
                    "example": "Zidan"
                  },
                  "lastName": {
                    "type": "string",
                    "example": "bagus"
                  },
                  "NIK": {
                    "type": "number",
                    "example": "3328080203000011"
                  },
                  "phoneNumber": {
                    "type": "string",
                    "minLength": 10,
                    "maxLength": 13,
                    "example": "0853567889"
                  },
                  "address": {
                    "type": "string",
                    "example": "tegal"
                  },
                  "gender": {
                    "enum": ["Male", "Female"]
                  },
                  "dateOfBirth": {
                    "type": "string",
                    "format": "date",
                    "example": "2002-01-01"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success created new user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Success"
                    },
                    "message": {
                      "type": "string",
                      "example": "Register success, enjoy your flight with us"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "newUser": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "example": "3"
                            },
                            "roleId": {
                              "type": "string",
                              "example": "buyer"
                            },
                            "gender": {
                              "enum": ["Male", "Female"],
                              "example": "Male"
                            },
                            "image": {
                              "type": "string",
                              "example": null
                            },
                            "NIK": {
                              "type": "number",
                              "example": "3328080203000011"
                            },
                            "address": {
                              "type": "string",
                              "example": "tegal"
                            },
                            "phoneNumber": {
                              "type": "integer",
                              "example": "0853567889"
                            },
                            "dateOfBirth": {
                              "type": "string",
                              "format": "date",
                              "example": "2002-01-01"
                            },
                            "lastName": {
                              "type": "string",
                              "example": "bagus"
                            },
                            "firstName": {
                              "type": "string",
                              "example": "Zidan"
                            },
                            "email": {
                              "type": "string",
                              "format": "email",
                              "example": "zidanset@mail.com"
                            },
                            "password": {
                              "type": "string",
                              "format": "password",
                              "example": "$2b$10$YvNNf.b.T6jaUbbgJo6xduOCeuL6HkgXDXZXyMeQX14cSnmEvAKwa"
                            },
                            "verified": {
                              "type": "boolean",
                              "example": "false"
                            },
                            "updatedAt": {
                              "type": "string",
                              "format": "date",
                              "example": "2022-11-30T04:05:32.493Z"
                            },
                            "createdAt": {
                              "type": "string",
                              "format": "date",
                              "example": "2022-11-30T04:05:32.493Z"
                            },
                            "googleId": {
                              "type": "string",
                              "example": null
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "User already exist",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "failed"
                    },
                    "message": {
                      "type": "string",
                      "example": "email already exist!"
                    }
                  }
                }
              }
            }
          },
          "400*": {
            "description": "Email not filled",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "failed"
                    },
                    "message": {
                      "type": "string",
                      "example": "email is required"
                    }
                  }
                }
              }
            }
          },
          "400**": {
            "description": "Email is invalid",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "failed"
                    },
                    "message": {
                      "type": "string",
                      "example": "This email is invalid. Make sure it's written like  example@email.com"
                    }
                  }
                }
              }
            }
          },
          "400***": {
            "description": "Name not filled",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "failed"
                    },
                    "message": {
                      "type": "string",
                      "example": "Name is required"
                    }
                  }
                }
              }
            }
          },
          "400****": {
            "description": "Password not filled",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "failed"
                    },
                    "message": {
                      "type": "string",
                      "example": "password is required"
                    }
                  }
                }
              }
            }
          },
          "400*****": {
            "description": "Password is too short",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "failed"
                    },
                    "message": {
                      "type": "string",
                      "example": "Your password is too short"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/login": {
      "post": {
        "tags": ["Users"],
        "requestBody": {
          "description": "Login users",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email",
                    "example": "zidanset5@mail.com"
                  },
                  "password": {
                    "type": "string",
                    "format": "password",
                    "example": "balasewu"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success Login",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "message": {
                      "type": "string",
                      "example": "Login successfully"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 1
                        },
                        "email": {
                          "type": "string",
                          "format": "email",
                          "example": "reinhart1@gmail.com"
                        },
                        "password": {
                          "type": "string",
                          "format": "password",
                          "example": "$2b$10$R362dIdU5ZgRtEQ3cntQWu6A0P57njfbBMP.8IRcykHZvzgrIGIRu"
                        },
                        "firstName": {
                          "type": "string",
                          "example": "reinhart00"
                        },
                        "lastName": {
                          "type": "string",
                          "example": "jims"
                        },
                        "NIK": {
                          "type": "number",
                          "example": "12345678"
                        },
                        "address": {
                          "type": "string",
                          "example": "rumahku dimana no 10"
                        },
                        "phoneNumber": {
                          "type": "string",
                          "minLength": 10,
                          "maxLength": 13,
                          "example": "1234567"
                        },
                        "image": {
                          "type": "string",
                          "example": "https://ik.imagekit.io/wx1jhmfkq/IMG-1670179576090_eH8RGZxIY.jpeg"
                        },
                        "dateOfBirth": {
                          "type": "string",
                          "format": "date",
                          "example": "2002-01-01"
                        },
                        "gender": {
                          "enum": ["Male", "Female"],
                          "example": "Male"
                        },
                        "roleId": {
                          "type": "string",
                          "example": "buyer"
                        },
                        "createdAt": {
                          "type": "string",
                          "format": "date",
                          "example": "2022-11-29T16:09:33.244Z"
                        },
                        "updatedAt": {
                          "type": "string",
                          "format": "date",
                          "example": "2022-11-29T16:09:33.244Z"
                        }
                      }
                    },
                    "token": {
                      "type": "string",
                      "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MywiZmlyc3ROYW1lIjoiWmlkYW4iLCJsYXN0TmFtZSI6ImJhZ3VzIiwiZW1haWwiOiJ6aWRhbnNldEBtYWlsLmNvbSIsInBhc3N3b3JkIjoiJDJiJDEwJFl2Tk5mLmIuVDZqYVViYmdKbzZ4ZHVPQ2V1TDZIa2dYRFhaWHlNZVFYMTRjU25tRXZBS3dhIiwiYWRkcmVzcyI6IjA4NTM1Njc4ODkiLCJwaG9uZU51bWJlciI6ODUzNTY3ODg5LCJyb2xlSWQiOiJidXllciIsImdlbmRlciI6bnVsbCwiZGF0ZU9mQmlydGgiOm51bGwsIk5JSyI6IjMzMjgwODAyMDMwMDAwMTEiLCJpYXQiOjE2Njk3ODQxODcsImV4cCI6MTY2OTg3MDU4N30.-18IUSvKUD-M4h6p6Y6E9FbswubgA_I0G2oo0TDMcfM"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Wrong Password",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "failed"
                    },
                    "message": {
                      "type": "string",
                      "example": "Wrong Password"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "User Not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "failed"
                    },
                    "message": {
                      "type": "string",
                      "example": "User Not found."
                    }
                  }
                }
              }
            }
          },
          "404*": {
            "description": "User Not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "failed"
                    },
                    "message": {
                      "type": "string",
                      "example": "Account Not Verified"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/users/findAll": {
      "get": {
        "tags": ["Users"],
        "security": [
          {
            "bearerToken": []
          }
        ],
        "responses": {
          "200": {
            "description": "Success get all users",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "message": {
                      "type": "string",
                      "example": "success get all users"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 1
                        },
                        "email": {
                          "type": "string",
                          "format": "email",
                          "example": "reinhart1@gmail.com"
                        },
                        "password": {
                          "type": "string",
                          "format": "password",
                          "example": "$2b$10$R362dIdU5ZgRtEQ3cntQWu6A0P57njfbBMP.8IRcykHZvzgrIGIRu"
                        },
                        "firstName": {
                          "type": "string",
                          "example": "reinhart00"
                        },
                        "lastName": {
                          "type": "string",
                          "example": "jims"
                        },
                        "NIK": {
                          "type": "number",
                          "example": "12345678"
                        },
                        "address": {
                          "type": "string",
                          "example": "rumahku dimana no 10"
                        },
                        "phoneNumber": {
                          "type": "string",
                          "minLength": 10,
                          "maxLength": 13,
                          "example": "1234567"
                        },
                        "image": {
                          "type": "string",
                          "example": "https://ik.imagekit.io/wx1jhmfkq/IMG-1670179576090_eH8RGZxIY.jpeg"
                        },
                        "dateOfBirth": {
                          "type": "string",
                          "format": "date",
                          "example": "2002-01-01"
                        },
                        "gender": {
                          "enum": ["Male", "Female"],
                          "example": "Male"
                        },
                        "googleId": {
                          "type": "string",
                          "example": null
                        },
                        "roleId": {
                          "type": "string",
                          "example": "buyer"
                        },
                        "verified": {
                          "type": "boolean",
                          "example": "true"
                        },
                        "createdAt": {
                          "type": "string",
                          "format": "date",
                          "example": "2022-11-29T16:09:33.244Z"
                        },
                        "updatedAt": {
                          "type": "string",
                          "format": "date",
                          "example": "2022-11-29T16:09:33.244Z"
                        },
                        "WhislistDestinations": {
                          "type": "array",
                          "items": {
                            "type": "object"
                          }
                        },
                        "Bookings": {
                          "type": "array",
                          "items": {
                            "type": "object"
                          }
                        },
                        "Transactions": {
                          "type": "array",
                          "items": {
                            "type": "object"
                          }
                        },
                        "Histories": {
                          "type": "array",
                          "items": {
                            "type": "object"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/users/findById/{id}": {
      "get": {
        "tags": ["Users"],
        "security": [
          {
            "bearerToken": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "get users by id",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "message": {
                      "type": "string",
                      "example": "success get user by id"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 1
                        },
                        "email": {
                          "type": "string",
                          "format": "email",
                          "example": "reinhart1@gmail.com"
                        },
                        "password": {
                          "type": "string",
                          "format": "password",
                          "example": "$2b$10$R362dIdU5ZgRtEQ3cntQWu6A0P57njfbBMP.8IRcykHZvzgrIGIRu"
                        },
                        "firstName": {
                          "type": "string",
                          "example": "reinhart00"
                        },
                        "lastName": {
                          "type": "string",
                          "example": "jims"
                        },
                        "NIK": {
                          "type": "number",
                          "example": "12345678"
                        },
                        "address": {
                          "type": "string",
                          "example": "rumahku dimana no 10"
                        },
                        "phoneNumber": {
                          "type": "string",
                          "minLength": 10,
                          "maxLength": 13,
                          "example": "1234567"
                        },
                        "image": {
                          "type": "string",
                          "example": "https://ik.imagekit.io/wx1jhmfkq/IMG-1670179576090_eH8RGZxIY.jpeg"
                        },
                        "dateOfBirth": {
                          "type": "string",
                          "format": "date",
                          "example": "2002-01-01"
                        },
                        "gender": {
                          "enum": ["Male", "Female"],
                          "example": "Male"
                        },
                        "googleId": {
                          "type": "string",
                          "example": null
                        },
                        "roleId": {
                          "type": "string",
                          "example": "buyer"
                        },
                        "verified": {
                          "type": "boolean",
                          "example": "true"
                        },
                        "createdAt": {
                          "type": "string",
                          "format": "date",
                          "example": "2022-11-29T16:09:33.244Z"
                        },
                        "updatedAt": {
                          "type": "string",
                          "format": "date",
                          "example": "2022-11-29T16:09:33.244Z"
                        },
                        "WhislistDestinations": {
                          "type": "array",
                          "items": {
                            "type": "object"
                          }
                        },
                        "Bookings": {
                          "type": "array",
                          "items": {
                            "type": "object"
                          }
                        },
                        "Transactions": {
                          "type": "array",
                          "items": {
                            "type": "object"
                          }
                        },
                        "Histories": {
                          "type": "array",
                          "items": {
                            "type": "object"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/users/update/{id}": {
      "put": {
        "tags": ["Users"],
        "security": [
          {
            "bearerToken": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "id of user to update",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "email",
            "description": "email of user to update",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "password",
            "description": "password of user to update",
            "schema": {
              "type": "string",
              "minLength": 8,
              "maxLength": 16
            }
          },
          {
            "in": "query",
            "name": "First Name",
            "description": "First Name of user to update",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "Last Name",
            "description": "Last Name of user to update",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "NIK",
            "description": "NIK of user to update",
            "schema": {
              "type": "number"
            }
          },
          {
            "in": "query",
            "name": "Phone Number",
            "description": "Phone Number of user to update",
            "schema": {
              "type": "string",
              "minLength": 10,
              "maxLength": 13
            }
          },
          {
            "in": "query",
            "name": "Adress",
            "description": "Adress of user to update",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "Date Of Birth",
            "description": "Date Of Birth of user to update",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "in": "query",
            "name": "Gender",
            "description": "Gender of user to update",
            "schema": {
              "type": "string",
              "enum": ["Male", "Female"]
            }
          },
          {
            "in": "query",
            "name": "Role Id",
            "description": "Role Id of user to update",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Update user by id",
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": ["image"],
                "properties": {
                  "image": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Sucess update users by id",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "message": {
                      "type": "string",
                      "example": "Your profile has been update sucessfull"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/users/delete/{id}": {
      "delete": {
        "tags": ["Users"],
        "security": [
          {
            "bearerToken": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "id of users to delete",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Delete users",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "message": {
                      "type": "string",
                      "example": "User has been deleted sucessfully"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/users/update-password/{id}":{
      "put":{
        "tags": ["Users"],
        "security": [
          {
            "bearerToken": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "id of user to update",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody":{
          "description": "update Password",
          "required": true,
          "content": {
            "application/json":{
              "schema":{
                "type": "object",
                "properties": {
                  "password":{
                    "type": "string",
                    "example": "12345678"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Sucess update users by id",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "message": {
                      "type": "string",
                      "example": "Your profile has been update sucessfull"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/forgotpassword":{
      "post":{
        "tags": ["Users"],
        "requestBody":{
          "description": "send email to reset password",
          "required": true,
          "content": {
            "application/json":{
              "schema":{
                "type": "object",
                "properties": {
                  "email":{
                    "type": "string",
                    "example": "ajaib@gmail.com"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201":{
            "description": "succes send link to email",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "message": {
                      "type": "string",
                      "example": "link succesful received"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/reset-password/{id}/{token}":{
      "post":{
        "tags": ["Users"],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "id of user to update",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "token",
            "required": true,
            "description": "token of user to update",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody":{
          "description": "new password",
          "required": true,
          "content": {
            "application/json":{
              "schema":{
                "type": "object",
                "properties": {
                  "password":{
                    "type": "string",
                    "example": "12345678"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201":{
            "description": "Success change password",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "message": {
                      "type": "string",
                      "example": "change Password Success"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/login/admin": {
      "post": {
        "tags": ["Admins"],
        "requestBody": {
          "description": "This is Login API",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email",
                    "example": "zakir@gmail.com"
                  },
                  "password": {
                    "type": "string",
                    "format": "password",
                    "example": "0205"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success Login",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "failed"
                    },
                    "message": {
                      "type": "string",
                      "example": "Welcome Nadir enjoy your work and have a nice day"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 1
                        },
                        "email": {
                          "type": "string",
                          "format": "email",
                          "example": "zakir@gmail.com"
                        },
                        "password": {
                          "type": "string",
                          "format": "password",
                          "example": "$2b$10$y8bCMnhepLFdz1xs7PrtB.EFmFMyI9U956RKleCrx0gL2nIGw2ek6"
                        },
                        "firstName": {
                          "type": "string",
                          "example": "Nadir"
                        },
                        "lastName": {
                          "type": "string",
                          "example": "Nawi"
                        },
                        "roleId": {
                          "type": "string",
                          "example": "Nawi"
                        },
                        "createdAt": {
                          "type": "string",
                          "format": "date",
                          "example": "2022-11-29T16:09:33.244Z"
                        },
                        "updatedAt": {
                          "type": "string",
                          "format": "date",
                          "example": "2022-11-29T16:09:33.244Z"
                        }
                      }
                    },
                    "token": {
                      "type": "string",
                      "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwiZmlyc3ROYW1lIjoiTmFkaXIiLCJsYXN0TmFtZSI6Ik5hd2kiLCJlbWFpbCI6Inpha2lyQGdtYWlsLmNvbSIsInBhc3N3b3JkIjoiJDJiJDEwJFNReW1MYWp6ajltWDVTalhRYk1oS2VYeW84SDUuS01vamhxeWZ1TzFiaW5McTJma0NhSllxIiwicm9sZUlkIjoiYWRtaW4iLCJpYXQiOjE2Njk4MDcwODAsImV4cCI6MTY2OTg5MzQ4MH0.s7TlsnIHvjT4TRvlZC_kDX50qGG1N2YtB095pu_7q6w"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Wrong Password",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "failed"
                    },
                    "message": {
                      "type": "string",
                      "example": "Invalid Password"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Admin Not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "failed"
                    },
                    "message": {
                      "type": "string",
                      "example": "Admin Not found."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/airports/add": {
      "post": {
        "tags": ["AirPorts"],
        "security": [
          {
            "bearerToken": []
          }
        ],
        "requestBody": {
          "description": "Success add new airport",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "Soekarno-Hatta International Airport"
                  },
                  "code": {
                    "type": "string",
                    "maxLength": 3,
                    "example": "CGK"
                  },
                  "location": {
                    "type": "string",
                    "example": "Jakarta"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success add airport",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Success"
                    },
                    "message": {
                      "type": "string",
                      "example": "Success create new airport"
                    },
                    "data": {
                      "$ref": "#/components/schemas/AirPorts"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Destination already exist",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "failed"
                    },
                    "message": {
                      "type": "string",
                      "example": "Airport is already exist, please create another one"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "failed"
                    },
                    "message": {
                      "type": "string",
                      "example": "Invalid Token"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/airports/findAll": {
      "get": {
        "tags": ["AirPorts"],
        "responses": {
          "200": {
            "description": "Success get all airports",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Success"
                    },
                    "message": {
                      "type": "string",
                      "example": "Success get all Airports"
                    },
                    "data": {
                      "$ref": "#/components/schemas/AirPorts"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/airports/findById/{id}": {
      "get": {
        "tags": ["AirPorts"],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "get airport by id",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Success"
                    },
                    "message": {
                      "type": "string",
                      "example": "Success get Airports by id"
                    },
                    "data": {
                      "$ref": "#/components/schemas/AirPorts"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/airports/update/{id}": {
      "put": {
        "tags": ["AirPorts"],
        "security": [
          {
            "bearerToken": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "id of airport to update",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "description": "update airport by id",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "Soekarno-Hatta International Airport"
                  },
                  "code": {
                    "type": "string",
                    "maxLength": 3,
                    "example": "CGK"
                  },
                  "location": {
                    "type": "string",
                    "example": "Jakarta"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "success update airport by id",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "message": {
                      "type": "string",
                      "example": "Airport has been update sucessfully"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "failed"
                    },
                    "message": {
                      "type": "string",
                      "example": "Invalid Token"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/airports/delete/{id}": {
      "delete": {
        "tags": ["AirPorts"],
        "security": [
          {
            "bearerToken": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "id of airport to delete",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Delete airport",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "message": {
                      "type": "string",
                      "example": "Airport has been deleted sucessfully"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "failed"
                    },
                    "message": {
                      "type": "string",
                      "example": "Invalid Token"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/destinations/add": {
      "post": {
        "tags": ["Destinations"],
        "security": [
          {
            "bearerToken": []
          }
        ],
        "requestBody": {
          "description": "image of whislist destination",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userId": {
                    "type": "integer",
                    "example": 1
                  },
                  "nameDestination": {
                    "type": "string",
                    "example": "Makassar"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success add new whislist destination",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Success"
                    },
                    "message": {
                      "type": "string",
                      "example": "Success create new whislist destination"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "newDestination": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "example": 1
                            },
                            "userId": {
                              "type": "integer",
                              "example": 1
                            },
                            "nameDestination": {
                              "type": "string",
                              "example": "Makassar"
                            },
                            "imageDestination": {
                              "type": "string",
                              "example": "https://ik.imagekit.io/wx1jhmfkq/IMG-1670315093588_j6e7OFyFS.jpeg"
                            },
                            "updatedAt": {
                              "type": "string",
                              "format": "date",
                              "example": "2022-11-29T16:09:33.244Z"
                            },
                            "createdAt": {
                              "type": "string",
                              "format": "date",
                              "example": "2022-11-29T16:09:33.244Z"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Destination already exist",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "failed"
                    },
                    "message": {
                      "type": "string",
                      "example": "Destination is already exist, please create another one"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "failed"
                    },
                    "message": {
                      "type": "string",
                      "example": "Invalid Token"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/destinations/findAll": {
      "get": {
        "tags": ["Destinations"],
        "responses": {
          "200": {
            "description": "Success get all whislist destinations",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Success"
                    },
                    "message": {
                      "type": "string",
                      "example": "success get all whislist destination"
                    },
                    "data": {
                      "$ref": "#components/schemas/Destinations"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/destinations/findById/{id}": {
      "get": {
        "tags": ["Destinations"],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "get whislist destination by id",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "message": {
                      "type": "string",
                      "example": "success get whislist destination by id"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Destinations"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/destinations/update/{id}": {
      "put": {
        "tags": ["Destinations"],
        "security": [
          {
            "bearerToken": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "id of whislist destination",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "userId",
            "required": true,
            "description": "id of user in whislist destination",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "nameDestination",
            "required": true,
            "description": "name of whislist destination",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "update image of whislist destination",
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": ["imageDestination"],
                "properties": {
                  "imageDestination": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "success update whislist destination by id",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "message": {
                      "type": "string",
                      "example": "whislist destination has been update sucessfully"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "failed"
                    },
                    "message": {
                      "type": "string",
                      "example": "Invalid Token"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/destinations/delete/{id}": {
      "delete": {
        "tags": ["Destinations"],
        "security": [
          {
            "bearerToken": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "id of whislist destination to delete",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Delete whislist destination",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "message": {
                      "type": "string",
                      "example": "whislist destination has been deleted sucessfully"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "failed"
                    },
                    "message": {
                      "type": "string",
                      "example": "Invalid Token"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/whislist/add":{
      "post":{
        "tags": ["WhislistDestinations"],
        "requestBody":{
          "description": "add Whislist destination",
          "required": true,
          "content": {
            "application/json":{
              "schema":{
                "type": "object",
                "properties": {
                  "userId":{
                    "type": "integer",
                    "example": 1
                  },
                  "destinationId":{
                    "type": "integer",
                    "example": 2
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201":{
            "description": "success create new whislist destination",
            "content": {
              "application/json":{
                "schema":{
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Success"
                    },
                    "message": {
                      "type": "string",
                      "example": "Success create new whislist"
                    },
                     "data":{
                      "type": "object",
                      "properties": {
                        "newWhislist":{
                          "type": "object",
                          "properties": {
                            "id":{
                              "type": "integer",
                              "example": 1
                            },
                            "userId":{
                              "type": "integer",
                              "example": 1
                            },
                            "destinationId":{
                              "type": "integer",
                              "example": 1
                            },
                            "updatedAt": {
                              "type": "string",
                              "format": "date",
                              "example": "2022-11-29T16:09:33.244Z"
                            },
                            "createdAt": {
                              "type": "string",
                              "format": "date",
                              "example": "2022-11-29T16:09:33.244Z"
                            }
                          }
                        }
                      }
                     }
                  }
                }
              }
            }
          },
          "400":{
            "description": "whislist already exist",
            "content": {
              "application/json":{
                "schema":{
                  "type": "object",
                  "properties": {
                    "status":{
                      "type": "string",
                      "example": "failed"
                    },
                    "message":{
                      "type": "string",
                      "example": "destination is already exist"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/whislist/whislistUser":{
      "post":{
        "tags":["WhislistDestinations"],
        "requestBody":{
          "description": "get whislist user",
          "required": true,
          "content": {
            "application/json":{
              "schema":{
                "type": "object",
                "properties": {
                  "userId":{
                    "type": "integer",
                    "example": 1
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200":{
            "description": "success get whislist destination user",
            "content": {
              "application/json":{
                "schema":{
                  "type": "object",
                  "properties": {
                    "dataWhislist":{
                      "type": "array",
                      "items":{
                       "$ref": "#components/schemas/WhislistDestinations"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/whislist/dataWhislist":{
      "post":{
        "tags": ["WhislistDestinations"],
        "requestBody":{
          "description": "get data Whislist destination",
          "content": {
            "application/json":{
              "schema":{
                "type": "object",
                "properties": {
                  "id":{
                    "type": "integer",
                    "example": 1
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200":{
            "description": "success get data whislist destination",
            "content": {
              "application/json":{
                "schema":{
                  "type": "object",
                  "properties": {
                    "dataWhislist":{
                      "type": "array",
                      "items":{
                       "$ref": "#components/schemas/WhislistDestinations"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/whislist/searchFlight":{
      "post":{
        "tags": ["WhislistDestinations"],
        "requestBody":{
          "description": "search flight in destination",
          "required": true,
          "content": {
            "application/json":{
              "schema":{
                "type": "object",
                "properties": {
                  "depatureDate":{
                    "type": "string",
                    "format": "date",
                    "example": "2022-08-10"
                  },
                  "destinationId":{
                    "type": "integer",
                    "example": 1
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200":{
            "description": "sucess search flight in destination",
            "content": {
              "application/json":{
                "schema":{
                  "type": "object",
                  "properties": {
                    "status":{
                      "type": "string",
                      "example": "success"
                    },
                    "data":{
                      "type": "array",
                      "items":{
                        "type": "object",
                        "properties":{
                          "id": {
                            "type": "integer",
                            "example": 1
                          },
                          "airPortId": {
                            "type": "integer",
                            "example": 1
                          },
                          "destinationId": {
                            "type": "integer",
                            "example": 1
                          },
                          "flightNumber": {
                            "type": "string",
                            "maxLength": 7,
                            "example": "JT 0534"
                          },
                          "airLine": {
                            "type": "string",
                            "example": "Lion Air"
                          },
                          "from": {
                            "type": "string",
                            "example": "Jakarta"
                          },
                          "to": {
                            "type": "string",
                            "example": "Solo"
                          },
                          "depatureDate": {
                            "type": "string",
                            "format": "date",
                            "example": "2022-08-10"
                          },
                          "depatureTime": {
                            "type": "string",
                            "format": "time",
                            "example": "11:15:30"
                          },
                          "arrivalDate": {
                            "type": "string",
                            "format": "date",
                            "example": "2022-08-10"
                          },
                          "arrivalTime": {
                            "type": "string",
                            "format": "time",
                            "example": "12:15:30"
                          },
                          "capasity": {
                            "type": "integer",
                            "example": 250
                          },
                          "typeOfClass": {
                            "enum": ["Economy Class", "Business Class", "First Class"],
                            "example": "Business Class"
                          },
                          "ClassPrice": {
                            "type": "integer",
                            "example": 2000000
                          },
                          "updatedAt": {
                            "type": "string",
                            "format": "date",
                            "example": "2022-12-06T13:37:04.842Z"
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date",
                            "example": "2022-12-06T13:37:04.842Z"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/whislist/searchWhislist":{
      "post":{
        "tags": ["WhislistDestinations"],
        "requestBody":{
          "description": "search whislist user",
          "required": true,
          "content": {
            "application/json":{
              "schema":{
                "type": "object",
                "properties": {
                  "userId":{
                    "type": "integer",
                    "example": 1
                  },
                  "destinationId":{
                    "type": "integer",
                    "example": 1
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200":{
            "description": "Success search whislist user",
            "content": {
              "application/json":{
                "schema":{
                  "type": "object",
                  "properties": {
                    "status":{
                      "type": "string",
                      "example": "success"
                    },
                    "data":{
                      "type": "array",
                      "items":{
                        "$ref": "#components/schemas/WhislistDestinations"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/whislist/delete/{id}":{
      "delete":{
        "tags": ["WhislistDestinations"],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "id of whislist to delete",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Delete whislist",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "message": {
                      "type": "string",
                      "example": "whislists has been deleted sucessfully"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/flights/add": {
      "post": {
        "tags": ["Flights"],
        "security": [
          {
            "bearerToken": []
          }
        ],
        "requestBody": {
          "description": "Success add new flight",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "airPortId": {
                    "type": "integer",
                    "example": 1
                  },
                  "destinationId": {
                    "type": "integer",
                    "example": 1
                  },
                  "flightNumber": {
                    "type": "string",
                    "maxLength": 7,
                    "example": "JT 0534"
                  },
                  "airLine": {
                    "type": "string",
                    "example": "Lion Air"
                  },
                  "from": {
                    "type": "string",
                    "example": "Jakarta"
                  },
                  "to": {
                    "type": "string",
                    "example": "Solo"
                  },
                  "depatureDate": {
                    "type": "string",
                    "format": "date",
                    "example": "2022-08-10"
                  },
                  "depatureTime": {
                    "type": "string",
                    "format": "time",
                    "example": "11:15:30"
                  },
                  "arrivalDate": {
                    "type": "string",
                    "format": "date",
                    "example": "2022-08-10"
                  },
                  "arrivalTime": {
                    "type": "string",
                    "format": "time",
                    "example": "12:15:30"
                  },
                  "capasity": {
                    "type": "integer",
                    "example": 250
                  },
                  "typeOfClass": {
                    "enum": ["Economy Class", "Business Class", "First Class"],
                    "example": "Business Class"
                  },
                  "ClassPrice": {
                    "type": "integer",
                    "example": 2000000
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "success create new flight",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Success"
                    },
                    "message": {
                      "type": "string",
                      "example": "success create new flight"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "newFlight": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "example": 1
                            },
                            "airPortId": {
                              "type": "integer",
                              "example": 1
                            },
                            "destinationId": {
                              "type": "integer",
                              "example": 1
                            },
                            "flightNumber": {
                              "type": "string",
                              "maxLength": 7,
                              "example": "JT 0534"
                            },
                            "airLine": {
                              "type": "string",
                              "example": "Lion Air"
                            },
                            "from": {
                              "type": "string",
                              "example": "Jakarta"
                            },
                            "to": {
                              "type": "string",
                              "example": "Solo"
                            },
                            "depatureDate": {
                              "type": "string",
                              "format": "date",
                              "example": "2022-08-10"
                            },
                            "depatureTime": {
                              "type": "string",
                              "format": "time",
                              "example": "11:15:30"
                            },
                            "arrivalDate": {
                              "type": "string",
                              "format": "date",
                              "example": "2022-08-10"
                            },
                            "arrivalTime": {
                              "type": "string",
                              "format": "time",
                              "example": "12:15:30"
                            },
                            "capasity": {
                              "type": "integer",
                              "example": 250
                            },
                            "typeOfClass": {
                              "enum": ["Economy Class", "Business Class", "First Class"],
                              "example": "Business Class"
                            },
                            "ClassPrice": {
                              "type": "integer",
                              "example": 2000000
                            },
                            "updatedAt": {
                              "type": "string",
                              "format": "date",
                              "example": "2022-12-06T13:37:04.842Z"
                            },
                            "createdAt": {
                              "type": "string",
                              "format": "date",
                              "example": "2022-12-06T13:37:04.842Z"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Destination already exist",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "failed"
                    },
                    "message": {
                      "type": "string",
                      "example": "Flight Number is already exist, please create another one"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "failed"
                    },
                    "message": {
                      "type": "string",
                      "example": "Invalid Token"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/flights/findAll": {
      "get": {
        "tags": ["Flights"],
        "responses": {
          "200": {
            "description": "Success get all flights",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Success"
                    },
                    "message": {
                      "type": "string",
                      "example": "success get all flights"
                    },
                    "data": {
                      "$ref": "#components/schemas/Flights"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/flights/findById/{id}": {
      "get": {
        "tags": ["Flights"],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "get flight by id",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "message": {
                      "type": "string",
                      "example": "success get success get flight by id"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Flights"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/flights/update/{id}": {
      "put": {
        "tags": ["Flights"],
        "security": [
          {
            "bearerToken": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "Id",
            "required": true,
            "description": "id of flight",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "description": "Update flight",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "airPortId": {
                    "type": "integer",
                    "example": 1
                  },
                  "destinationId": {
                    "type": "integer",
                    "example": 1
                  },
                  "flightNumber": {
                    "type": "string",
                    "maxLength": 7,
                    "example": "JT 0534"
                  },
                  "airLine": {
                    "type": "string",
                    "example": "Lion Air"
                  },
                  "from": {
                    "type": "string",
                    "example": "Jakarta"
                  },
                  "to": {
                    "type": "string",
                    "example": "Solo"
                  },
                  "depatureDate": {
                    "type": "string",
                    "format": "date",
                    "example": "2022-08-10"
                  },
                  "depatureTime": {
                    "type": "string",
                    "format": "time",
                    "example": "11:15:30"
                  },
                  "arrivalDate": {
                    "type": "string",
                    "format": "date",
                    "example": "2022-08-10"
                  },
                  "arrivalTime": {
                    "type": "string",
                    "format": "time",
                    "example": "12:15:30"
                  },
                  "capasity": {
                    "type": "integer",
                    "example": 250
                  },
                  "typeOfClass": {
                    "enum": ["Economy Class", "Business Class", "First Class"],
                    "example": "Business Class"
                  },
                  "ClassPrice": {
                    "type": "integer",
                    "example": 2000000
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success update flight by id",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "message": {
                      "type": "string",
                      "example": "Flight has been update sucessfully"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "failed"
                    },
                    "message": {
                      "type": "string",
                      "example": "Invalid Token"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/flights/delete/{id}": {
      "delete": {
        "tags": ["Flights"],
        "security": [
          {
            "bearerToken": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "id of flight to delete",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Delete flight",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "message": {
                      "type": "string",
                      "example": "Flight has been deleted sucessfully"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "failed"
                    },
                    "message": {
                      "type": "string",
                      "example": "Invalid Token"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/flights/search":{
      "post":{
        "tags": ["Flights"],
        "requestBody":{
          "description": "Sucess search flight",
          "required": true,
          "content": {
            "application/json":{
              "schema":{
                "type": "object",
                "properties": {
                  "from": {
                    "type": "string",
                    "example": "Jakarta"
                  },
                  "to": {
                    "type": "string",
                    "example": "Solo"
                  },
                  "depatureDate": {
                    "type": "string",
                    "format": "date",
                    "example": "2022-08-10"
                  },
                  "typeOfClass": {
                    "enum": ["Economy Class", "Business Class", "First Class"],
                    "example": "Business Class"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200":{
            "description": "Success search flight",
            "content": {
              "application/json":{
                "schema":{
                  "type": "object",
                  "properties": {
                    "status":{
                      "type": "string",
                      "example": "Success"
                    },
                    "data":{
                      "type": "array",
                      "items":{
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "example": 1
                          },
                          "airPortId": {
                            "type": "integer",
                            "example": 1
                          },
                          "destinationId": {
                            "type": "integer",
                            "example": 1
                          },
                          "flightNumber": {
                            "type": "string",
                            "maxLength": 7,
                            "example": "JT 0534"
                          },
                          "airLine": {
                            "type": "string",
                            "example": "Lion Air"
                          },
                          "from": {
                            "type": "string",
                            "example": "Jakarta"
                          },
                          "to": {
                            "type": "string",
                            "example": "Solo"
                          },
                          "depatureDate": {
                            "type": "string",
                            "format": "date",
                            "example": "2022-08-10"
                          },
                          "depatureTime": {
                            "type": "string",
                            "format": "time",
                            "example": "11:15:30"
                          },
                          "arrivalDate": {
                            "type": "string",
                            "format": "date",
                            "example": "2022-08-10"
                          },
                          "arrivalTime": {
                            "type": "string",
                            "format": "time",
                            "example": "12:15:30"
                          },
                          "capasity": {
                            "type": "integer",
                            "example": 250
                          },
                          "typeOfClass": {
                            "enum": ["Economy Class", "Business Class", "First Class"],
                            "example": "Business Class"
                          },
                          "ClassPrice": {
                            "type": "integer",
                            "example": 2000000
                          },
                          "updatedAt": {
                            "type": "string",
                            "format": "date",
                            "example": "2022-12-06T13:37:04.842Z"
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date",
                            "example": "2022-12-06T13:37:04.842Z"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
       "/api/bookings/add": {
      "post": {
        "tags": ["Bookings"],
        "requestBody": {
          "description": "Add new Booking",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items":{
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "example": "Zidan"
                    },
                    "age": {
                      "type": "integer",
                      "example": 20
                    },
                    "NIK": {
                      "type": "string",
                      "example": "3328080205000004"
                    },
                    "phoneNumber": {
                      "type": "string",
                      "maxLength": 13,
                      "example": "087823456784"
                    },
                     "seatNumber": {
                      "type": "string",
                      "example": "A1"
                  },
                      "price": {
                      "type": "integer",
                      "example": "1000000"
                  },
                   "flightId": {
                      "type": "integer",
                      "example": "1"
                },
                    "userId": {
                      "type": "integer",
                      "example": "1"
              }
            }
                } 
        }
      }
    }
    },
    "responses": {
      "201": {
        "description": "Success add new booking",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "Success"
                },
                "message": {
                  "type": "string",
                  "example": "success create new bookings"
                },
                "data":{
                  "type": "object",
                  "properties": {
                    "newBooking": {
                      "type": "array",
                      "items":{
                        "$ref": "#components/schemas/Bookings"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  },
     "/api/bookings/findAll": {
      "get": {
        "tags": ["Bookings"],
        "responses": {
          "200": {
            "description": "Success get all bookings",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Success"
                    },
                    "message": {
                      "type": "string",
                      "example": "success get all bookings"
                    },
                    "data": {
                     "type": "array",
                     "items":{
                      "$ref": "#components/schemas/Bookings"
                     }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
      "/api/bookings/findById/{id}": {
      "get": {
        "tags": ["Bookings"],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get booking by id",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "message": {
                      "type": "string",
                      "example": "success get booking by id"
                    },
                    "data": {
                      "$ref": "#components/schemas/Bookings"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/bookings/delete/{id}": {
      "delete": {
        "tags": ["Bookings"],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "id of booking to delete",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Delete booking",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "message": {
                      "type": "string",
                      "example": "Booking has been deleted sucessfully"
                    }
                  }
                }
              }
            }
          }
      }
    }
  },
     "/api/seats/findAll": {
      "get": {
        "tags": ["Seats"],
        "responses": {
          "200": {
            "description": "Success get all seats",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Success"
                    },
                    "message": {
                      "type": "string",
                      "example": "success get all seat"
                    },
                    "data": {
                      "$ref": "#components/schemas/Seats"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
       "/api/seats/delete/{id}": {
      "delete": {
        "tags": ["Seats"],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "id of seat to delete",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Delete seat",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "message": {
                      "type": "string",
                      "example": "Seats has been deleted sucessfully"
                    }
                  }
                }
              }
            }
          }
      }
    }
  },
    "/api/Histories": {
      "post": {
        "tags": ["History"],
        "requestBody": {
          "description": "Get History",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "example": "1"
                  }
          }
        }
      }
    }
    },
    "responses": {
      "201": {
        "description": "Success get History",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "Success"
                },
                "message": {
                  "type": "string",
                  "example": "success get history"
                },
                "orderList": {
                  "$ref": "#components/schemas/History"
                }
              }
            }
          }
        }
      }
    }
  }
  },
  "/api/Histories/all":{
    "get":{
      "tags": ["History"],
      "security": [
        {
          "bearerToken": []
        }
      ],
     "responses": {
      "200":{
        "description": "Sucess get all history",
        "content": {
          "application/json":{
            "schema":{
             "type": "object",
             "properties": {
              "status": {
                "type": "string",
              "example": "Success"
              },
              "message": {
                "type": "string",
                "example": "success get all Aiport"
              },
              "data":{
                "type": "array",
                "items":{
                  "$ref": "#components/schemas/History"
                }
              }
             }
            }
          }
        }
      }
     }
      }
    },
    "/api//Histories/delete/{id}":{
      "delete":{
        "tags": ["History"],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "id of history to delete",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Delete history",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "message": {
                      "type": "string",
                      "example": "history has been deleted sucessfully"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
  "/api/notification/update": {
      "put": {
        "tags": ["Notification"],
        "requestBody": {
          "description": "update notification",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "boolean",
                    "example": "false"
                  },
                  "historyId": {
                    "type": "integer",
                    "example": 1
              
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "success update Status",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "message": {
                      "type": "string",
                      "example": "Status has been update sucessfully"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/notification/updateAll": {
      "put": {
        "tags": ["Notification"],
        "requestBody": {
          "description": "update notification",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "boolean",
                    "example": "true"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "success update Status",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "message": {
                      "type": "string",
                      "example": "Status has been update sucessfully"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/passenger/add": {
      "post": {
        "tags": ["Passengers"],
        "security": [
          {
            "bearerToken": []
          }
        ],
        "requestBody": {
          "description": "Add new passager",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "Nadir"
                  },
                  "age": {
                    "type": "integer",
                    "example": 1
                  },
                  "NIK": {
                    "type": "integer",
                    "example": "77135478901012"
                  },
                  "phoneNumber": {
                    "type": "string",
                    "maxLength": 13,
                    "example": "085260940057"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success add new passenger",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Success"
                    },
                    "message": {
                      "type": "string",
                      "example": "success create new passenger"
                    },
                    "newPassenger": {
                      "$ref": "#components/schemas/Passengers"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/passenger/findAll": {
      "get": {
        "tags": ["Passengers"],
        "responses": {
          "200": {
            "description": "Success get all flights",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Success"
                    },
                    "message": {
                      "type": "string",
                      "example": "success get all passengers"
                    },
                    "data": {
                      "$ref": "#components/schemas/Passengers"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/passenger/findById/{id}": {
      "get": {
        "tags": ["Passengers"],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get flight by id",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "message": {
                      "type": "string",
                      "example": "success get passenger by id"
                    },
                    "data": {
                      "$ref": "#components/schemas/Passengers"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/passenger/update/{id}": {
      "put": {
        "tags": ["Passengers"],
        "security": [
          {
            "bearerToken": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "id of passenger",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "description": "update passenger",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "Nadir"
                  },
                  "age": {
                    "type": "integer",
                    "example": 1
                  },
                  "NIK": {
                    "type": "integer",
                    "example": "77135478901012"
                  },
                  "phoneNumber": {
                    "type": "string",
                    "maxLength": 13,
                    "example": "085260940057"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "success update passenger by id",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "message": {
                      "type": "string",
                      "example": "Passenger has been update sucessfully"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/passenger/delete/{id}": {
      "delete": {
        "tags": ["Passengers"],
        "security": [
          {
            "bearerToken": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "id of passenger to delete",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Delete passenger",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "message": {
                      "type": "string",
                      "example": "Passenger has been deleted sucessfully"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }, 
  "components": {
    "schemas": {
      "Users": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 1
          },
          "email": {
            "type": "string",
            "format": "email",
            "example": "reinhart1@gmail.com"
          },
          "password": {
            "type": "string",
            "format": "password",
            "example": "$2b$10$R362dIdU5ZgRtEQ3cntQWu6A0P57njfbBMP.8IRcykHZvzgrIGIRu"
          },
          "firstName": {
            "type": "string",
            "example": "reinhart00"
          },
          "lastName": {
            "type": "string",
            "example": "jims"
          },
          "NIK": {
            "type": "number",
            "example": "12345678"
          },
          "address": {
            "type": "string",
            "example": "rumahku dimana no 10"
          },
          "phoneNumber": {
            "type": "string",
            "minLength": 10,
            "maxLength": 13,
            "example": "1234567"
          },
          "image": {
            "type": "string",
            "example": "https://ik.imagekit.io/wx1jhmfkq/IMG-1670179576090_eH8RGZxIY.jpeg"
          },
          "dateOfBirth": {
            "type": "string",
            "format": "date",
            "example": "2002-01-01"
          },
          "gender": {
            "enum": ["Male", "Female"],
            "example": "Male"
          },
          "roleId": {
            "type": "string",
            "example": "buyer"
          },
          "createdAt": {
            "type": "string",
            "format": "date",
            "example": "2022-11-29T16:09:33.244Z"
          },
          "updatedAt": {
            "type": "string",
            "format": "date",
            "example": "2022-11-29T16:09:33.244Z"
          }
        }
      },
      "AirPorts": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 1
          },
          "name": {
            "type": "string",
            "example": "Soekarno-Hatta International Airport"
          },
          "code": {
            "type": "string",
            "maxLength": 3,
            "example": "CGK"
          },
          "location": {
            "type": "string",
            "example": "Jakarta"
          },
          "updatedAt": {
            "type": "string",
            "format": "date",
            "example": "2022-12-03T01:06:05.920Z"
          },
          "createdAt": {
            "type": "string",
            "format": "date",
            "example": "2022-12-03T01:06:05.920"
          },
          "Flights": {
            "type": "array",
            "items": {
              "type": "object"
            }
          }
        }
      },
      "Destinations": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 1
          },
          "userId": {
            "type": "integer",
            "example": 1
          },
          "nameDestination": {
            "type": "string",
            "example": "Makassar"
          },
          "imageDestination": {
            "type": "string",
            "example": "https://ik.imagekit.io/wx1jhmfkq/IMG-1670315093588_j6e7OFyFS.jpeg"
          },
          "updatedAt": {
            "type": "string",
            "format": "date",
            "example": "2022-11-29T16:09:33.244Z"
          },
          "createdAt": {
            "type": "string",
            "format": "date",
            "example": "2022-11-29T16:09:33.244Z"
          },
          "Flights": {
            "type": "array",
            "items": {
              "type": "object"
            }
          }
        }
      },
      "Flights": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 1
          },
          "airPortId": {
            "type": "integer",
            "example": 1
          },
          "destinationId": {
            "type": "integer",
            "example": 1
          },
          "flightNumber": {
            "type": "string",
            "maxLength": 7,
            "example": "JT 0534"
          },
          "airLine": {
            "type": "string",
            "example": "Lion Air"
          },
          "from": {
            "type": "string",
            "example": "Jakarta"
          },
          "to": {
            "type": "string",
            "example": "Solo"
          },
          "depatureDate": {
            "type": "string",
            "format": "date",
            "example": "2022-08-10"
          },
          "depatureTime": {
            "type": "string",
            "format": "time",
            "example": "11:15:30"
          },
          "arrivalDate": {
            "type": "string",
            "format": "date",
            "example": "2022-08-10"
          },
          "arrivalTime": {
            "type": "string",
            "format": "time",
            "example": "12:15:30"
          },
          "capasity": {
            "type": "integer",
            "example": 250
          },
          "typeOfClass": {
            "enum": ["Economy Class", "Business Class", "First Class"],
            "example": "Business Class"
          },
          "ClassPrice": {
            "type": "integer",
            "example": 2000000
          },
          "updatedAt": {
            "type": "string",
            "format": "date",
            "example": "2022-12-06T13:37:04.842Z"
          },
          "createdAt": {
            "type": "string",
            "format": "date",
            "example": "2022-12-06T13:37:04.842Z"
          },
          "AirPort": {
            "type": "array",
            "items": {
              "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 1
          },
          "name": {
            "type": "string",
            "example": "Soekarno-Hatta International Airport"
          },
          "code": {
            "type": "string",
            "maxLength": 3,
            "example": "CGK"
          },
          "location": {
            "type": "string",
            "example": "Jakarta"
          },
          "updatedAt": {
            "type": "string",
            "format": "date",
            "example": "2022-12-03T01:06:05.920Z"
          },
          "createdAt": {
            "type": "string",
            "format": "date",
            "example": "2022-12-03T01:06:05.920"
          }
        }
            }
          },
        "Seats":{
          "type": "array",
          "items":{
            "type": "object"
          }
        }
        }
      },
       "Bookings": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": "1"
          },
          "userId": {
            "type": "integer",
            "example": "1"
          },
          "price": {
            "type": "integer",
            "example": "1000000"
          },
           "status": {
            "type": "boolean",
            "example": "false"
          },
          "updatedAt": {
            "type": "string",
            "format": "date",
            "example": "2022-12-21T01:45:35.795Z"
          },
          "createdAt": {
            "type": "string",
            "format": "date",
            "example": "2022-12-21T01:45:35.795Z"
          },
          "Passengers":{
            "type": "array",
            "items":{
              "$ref": "#components/schemas/Passengers"
            }
          },
          "Seats":{
            "type": "array",
            "items":{
              "$ref": "#components/schemas/Seats"
            }
          }
        }
    },
      "Seats": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": "1"
          },
          "seatNumber": {
            "type": "string",
            "example": "A1"
          },
          "bookingId": {
            "type": "integer",
            "example": "1"
          },
          "flightId": {
            "type": "integer",
            "example": "1"
          },
          "updatedAt": {
            "type": "string",
            "format": "date",
            "example": "2022-12-21T01:45:35.795Z"
          },
          "createdAt": {
            "type": "string",
            "format": "date",
            "example": "2022-12-21T01:45:35.795Z"
          }
        }
        },
         "History": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": "1"
          },
          "bookingId": {
            "type": "integer",
            "example": "1"
          },
          "userId": {
            "type": "integer",
            "example": "1"
          },
          "flightId": {
            "type": "integer",
            "example": "1"
          },
          "historyDate": {
            "type": "string",
            "format": "date",
            "example": "2022-12-26"
          },
          "updatedAt": {
            "type": "string",
            "format": "date",
            "example": "2022-12-21T01:45:35.795Z"
          },
          "createdAt": {
            "type": "string",
            "format": "date",
            "example": "2022-12-21T01:45:35.795Z"
          },
          "Booking":{
            "type": "object",
            "properties": {
              "Passengers":{
                "type": "object",
                "properties": {
    
                }
              },
              "Seats":{
                "type": "object",
                "properties": {
    
                }
              }
            }
          },
          "User":{
            "type": "object",
            "properties": {

            }
          },
          "Flight":{
            "type": "object",
            "properties": {

            }
          },
          "Notifications":{
            "type": "object",
            "properties": {

            }
          }
        }
        },
      "Passengers": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": "1"
          },
          "name": {
            "type": "string",
            "example": "Nadir"
          },
          "age": {
            "type": "integer",
            "example": 20
          },
          "NIK": {
            "type": "string",
            "example": "77135478901012"
          },
          "phoneNumber": {
            "type": "string",
            "maxLength": 13,
            "example": "085260940057"
          },
          "bookingId":{
            "type": "integer",
            "example": 1
          },
          "updatedAt": {
            "type": "string",
            "format": "date",
            "example": "2022-12-06T17:38:39.125Z"
          },
          "createdAt": {
            "type": "string",
            "format": "date",
            "example": "2022-12-06T17:38:39.125Z"
          }
        }
      },
      "WhislistDestinations":{
        "type": "object",
        "properties": {
          "id":{
            "type": "integer",
            "example": 1
          },
          "userId":{
            "type": "integer",
            "example": 1
          },
          "DestinationId":{
            "type": "integer",
            "example": 1
          },
          "updatedAt": {
            "type": "string",
            "format": "date",
            "example": "2022-12-06T17:38:39.125Z"
          },
          "createdAt": {
            "type": "string",
            "format": "date",
            "example": "2022-12-06T17:38:39.125Z"
          },
          "WhislistDestination":{
            "type": "object",
            "properties": {
              "id":{
                "type": "integer",
                "example": 1
              },
              "nameDestination":{
                "type": "string",
                "example": "Makassar"
              },
              "imageDestination":{
                "type": "string",
                "example": "https://ik.imagekit.io/wx1jhmfkq/IMG-1672488596388_LRDrN_zgB.jpeg"
              },
              "description":{
                "type": "string",
                "example": "Kota Daeng"
              },
              "updatedAt": {
                "type": "string",
                "format": "date",
                "example": "2022-12-06T17:38:39.125Z"
              },
              "createdAt": {
                "type": "string",
                "format": "date",
                "example": "2022-12-06T17:38:39.125Z"
              }
            }
          }
        }
      }
    },
    "securitySchemes": {
      "bearerToken": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  }
}
